{"version":3,"sources":["components/TextBox.js","components/Quest.js","components/ActionButton.js","components/ButtonsList.js","components/ImageContainer.js","components/Inventory.js","components/InputText.js","components/QuestPage.js","components/QuestButton.js","components/QuestButtonsList.js","App.js","index.js"],"names":["TextBox","this","props","text","style","getStyle","flex","marginLeft","marginRight","marginTop","backgroundColor","color","border","boxShadow","borderRadius","padding","textAlign","React","Component","Quest","download","id","model","console","log","acc","globals","forEach","value","index","params","JSON","stringify","type","justifyName","varName","setState","parse","startNode","isReady","onRestart","bind","onExit","handler","require","request","error","response","body","statusCode","data","node","getNode","isBaseNode","evalAns","eval","code","links","length","execUntilBaseNode","to","isBranching","newNodeIndex","filter","edge","transition","changeVariable","prevState","newValue","k","state","nodes","prevProps","snapshot","curNode","isGood","goodNodes","some","goodNode","isBad","badNodes","badNode","endpointActions","Array","restartAction","action","push","exitAction","globalMap","globalsAsMap","key","actions","map","nextBaseNode","questNode","image","pic","input","isLast","onBackButtonClick","ActionButton","ListItem","button","alignItems","onClick","ListItemIcon","fontSize","ListItemText","primary","ButtonsList","btns","Divider","variant","display","flexDirection","marginBottom","ImageContainer","src","alignSelf","objectFit","height","width","BorderLinearProgress","withStyles","root","lighten","bar","LinearProgress","Inventory","mainHeaderStyle","parseGlobals","global","parseGlobal","items","item","itemStyle","itemsListStyle","flexWrap","InputText","answer","setStateInner","TextField","label","multiline","rowsMax","onChange","event","inputStyle","margin","target","onCheckSuccess","QuestPage","inInventory","onSwipeMove","onCheckInputSuccess","content","onSwipeStart","onSwipeEnd","justifyContent","alignContent","position","minWidth","window","innerWidth","x","QuestButton","header","desc","getBtnStyle","onButtonClick","QuestButtonsList","buttons","description","App","quests","currentQuestId","classes","makeStyles","theme","flexGrow","menuButton","spacing","title","backBtn","IconButton","className","aria-label","AppBar","Toolbar","Typography","background","minHeight","connect","send","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5157cdcd.chunk.js","sourcesContent":["import React from \"react\"\n\nclass TextBox extends React.Component{\n\n    render(){\n        if(this.props.text !== \"\") {\n            return(\n                <div style={this.getStyle()}>\n                    <p>{this.props.text}</p>\n                </div>\n            )\n        }else{\n\n        }\n    }\n\n    getStyle(){\n        return {\n            flex:0.5,\n            marginLeft: \"1%\",\n            marginRight: \"1%\",\n            marginTop: \"1%\",\n            backgroundColor:\"#FFFBF2\",\n            color:\"#4D708B\",\n            border:\"1px solid black\",\n            boxShadow: \"inset 3px 3px 10px #ccc\",\n            borderRadius:\"5px\",\n            padding:\"1%\",\n            textAlign:\"width\",\n        }\n    }\n\n}\n\nexport default TextBox","import React from \"react\"\nimport QuestPage from \"./QuestPage\"\nimport TextBox from \"./TextBox\";\nimport Request from \"request\"\n\nclass Quest extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.download(this.props.id, (model) => {\n            console.log(\"ALLO\");\n            console.log(model);\n            // console.log(model.data.globals);\n            // type, varName, justifyName)\n            let acc = \"{\";\n            model.globals.forEach((value, index) => {\n                if (index !== 0) acc += \",\";\n                let params = JSON.stringify({\n                    type: value.type,\n                    justifyName: value.justifyName,\n                    value: value.value\n                });\n                acc += `\"${value.varName}\" : ${params}`\n            });\n            acc += \"}\";\n            this.setState({\n                model: model,\n                globals: JSON.parse(acc),\n                index: model.startNode,\n                isReady: true\n            });\n        });\n\n        this.onRestart = this.onRestart.bind(this);\n        this.onExit = this.onExit.bind(this)\n\n    }\n\n\n    download(id, handler) {\n        const request = require('request');\n        request(`https://questbook.evarand.rocks/api/quest/${id}/`, function (error, response, body) {\n            console.error('error:', error); // Print the error if one occurred\n            console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received\n            console.log('body:', body); // Print the HTML for the Google homepage.;\n            handler(JSON.parse(JSON.parse(body).data));\n        });\n        // fetch(\"https://questbook.evarand.rocks/api/quest/1/\")\n        //     .then(response => response.json())\n        //     .then(data => {\n        //         return data\n        //         console.log(data)\n        //         this.setState({\n        //             model: data\n        //         })\n        //     })\n        // return\n        // return JSON.parse(`{\"globals\":[{\"type\":2,\"varName\":\"name\",\"justifyName\":\"Имя\",\"value\":\"Нет пока имени\"},{\"type\":0,\"varName\":\"age\",\"justifyName\":\"Возраст\",\"value\":\"Нет пока возраста\"}],\"startNode\":0,\"goodNodes\":[4],\"badNodes\":[5],\"nodes\":[{\"id\":0,\"text\":\"Какое твое имя, путник?\",\"pic\":null,\"links\":[{\"transition\":\"Вася\",\"to\":2},{\"transition\":\"Петр\",\"to\":1}]},{\"id\":1,\"text\":\"Привет, Петр\",\"pic\":null,\"links\":[{\"transition\":\"Продолжить\",\"to\":9}]},{\"id\":2,\"text\":\"Привет, Вася\",\"pic\":null,\"links\":[{\"transition\":\"Продолжить\",\"to\":8}]},{\"id\":3,\"text\":\"Выбери возраст\",\"pic\":null,\"links\":[{\"transition\":\"5\",\"to\":6},{\"transition\":\"18\",\"to\":7}]},{\"id\":4,\"text\":\"Молодец\",\"pic\":null,\"links\":[]},{\"id\":5,\"text\":\"Ну ты и редиска, конечно\",\"pic\":null,\"links\":[]},{\"id\":6,\"links\":[{\"transition\":null,\"to\":10}],\"code\":\"function changeVariable(prevState, newValue) {\\\\n        \\\\n                        let newGlobal = JSON.parse(JSON.stringify(prevState)).globals;\\\\n        \\\\n                        newGlobal.age.value = newValue;\\\\n                        return newGlobal;\\\\n                        }\\\\nthis.setState( prevState => ({\\\\n            globals: changeVariable(prevState, \\\\\"8\\\\\")\\\\n        }));\",\"isBranching\":false},{\"id\":7,\"links\":[{\"transition\":null,\"to\":10}],\"code\":\"function changeVariable(prevState, newValue) {\\\\n        \\\\n                        let newGlobal = JSON.parse(JSON.stringify(prevState)).globals;\\\\n        \\\\n                        newGlobal.age.value = newValue;\\\\n                        return newGlobal;\\\\n                        }\\\\nthis.setState( prevState => ({\\\\n            globals: changeVariable(prevState, \\\\\"18\\\\\")\\\\n        }));\",\"isBranching\":false},{\"id\":8,\"links\":[{\"transition\":null,\"to\":3}],\"code\":\"function changeVariable(prevState, newValue) {\\\\n        \\\\n                        let newGlobal = JSON.parse(JSON.stringify(prevState)).globals;\\\\n        \\\\n                        newGlobal.name.value = newValue;\\\\n                        return newGlobal;\\\\n                        }\\\\nthis.setState( prevState => ({\\\\n            globals: changeVariable(prevState, \\\\\"Вася\\\\\")\\\\n        }));\",\"isBranching\":false},{\"id\":9,\"links\":[{\"transition\":null,\"to\":3}],\"code\":\"function changeVariable(prevState, newValue) {\\\\n        \\\\n                        let newGlobal = JSON.parse(JSON.stringify(prevState)).globals;\\\\n        \\\\n                        newGlobal.name.value = newValue;\\\\n                        return newGlobal;\\\\n                        }\\\\nthis.setState( prevState => ({\\\\n            globals: changeVariable(prevState, \\\\\"Петр\\\\\")\\\\n        }));\",\"isBranching\":false},{\"id\":10,\"links\":[{\"transition\":\"false\",\"to\":4},{\"transition\":\"true\",\"to\":5}],\"code\":\"(( ( \\\\\"Вася\\\\\") == (this.state.globals.name.value)) && (( \\\\\"18\\\\\") == (this.state.globals.age.value))) ? \\\\\"true\\\\\" : \\\\\"false\\\\\"\",\"isBranching\":true}]}`)\n    }\n\n\n    execUntilBaseNode(index) {\n        const node = this.getNode(index);\n        if (!this.isBaseNode(node)) {\n            const evalAns = eval(node.code);\n            if (node.links.length === 1) {\n                return this.execUntilBaseNode(node.links[0].to)\n            }\n            if (node.isBranching) {\n                const newNodeIndex = node.links.filter(edge => edge.transition === evalAns)[0].to;\n                // todo check newNodeIndex is int\n                return this.execUntilBaseNode(newNodeIndex)\n            } else {\n                function changeVariable(prevState, newValue) {\n                    let newGlobal = JSON.parse(JSON.stringify(prevState));\n                    newGlobal.k = newValue\n                }\n\n                this.setState(prevState => ({\n                    globals: changeVariable(prevState, prevState.globals.k + 1)\n                }));\n\n                // todo check evalAns is int\n                return this.execUntilBaseNode(evalAns)\n            }\n        } else {\n            return node\n        }\n    }\n\n    isBaseNode(node) {\n        return !(typeof node.text === \"undefined\")\n    }\n\n    getNode(index) {\n        return this.state.model.nodes[index]\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        let curNode = this.getNode(this.state.index);\n        if (!this.isBaseNode(curNode)) {\n            const evalAns = eval(curNode.code);\n            if (curNode.links.length === 1) {\n\n                this.setState({\n                    index: curNode.links[0].to\n                });\n\n            } else {\n                if (curNode.isBranching) {\n                    console.log(\"we in Branch!\");\n                    const newNodeIndex = curNode.links.filter(edge => edge.transition === evalAns)[0].to;\n                    // todo check newNodeIndex is int\n                    this.setState({\n                        index: newNodeIndex\n                    });\n                } else {\n                    // todo check evalAns is int\n                    this.setState({\n                        index: evalAns\n                    })\n                }\n            }\n        }\n    }\n\n    render() {\n        if (this.state !== null) {\n            const isGood = this.state.model.goodNodes.some(goodNode => goodNode === this.state.index);\n            const isBad = this.state.model.badNodes.some(badNode => badNode === this.state.index);\n            let endpointActions = new Array();\n            if (isBad) {\n                const restartAction = {\n                    text: \"Перезапустить\",\n                    action: this.onRestart\n                }\n                endpointActions.push(restartAction)\n            }\n            if (isGood || isBad) {\n                const exitAction = {\n                    text: \"Выйти\",\n                    action: this.onExit\n                }\n                endpointActions.push(exitAction)\n            }\n\n            let curNode = this.getNode(this.state.index);\n            let globalMap = this.state.globals;\n            let globalsAsMap = new Array();\n            for (const key in globalMap) {\n                globalsAsMap.push(globalMap[key])\n            }\n\n            if (this.isBaseNode(curNode)) {\n                const actions = curNode.links.map(edge => {\n                        let text = edge.transition;\n                        let to = edge.to;\n                        let action = () => {\n                            let nextBaseNode = this.execUntilBaseNode(to);\n                            this.setState({\n                                index: nextBaseNode.id\n                            })\n                        };\n\n                        return {\n                            text: text,\n                            action: action\n                        }\n                    }\n                );\n\n                const questNode = {\n                    text: curNode.text,\n                    image: curNode.pic,\n                    actions: actions,\n                    input: curNode.input,\n                    globals: globalsAsMap,\n                    isLast: isGood || isBad,\n                    endpointActions: endpointActions\n                };\n\n                return (\n                    <div>\n                        <QuestPage\n                            node={questNode}\n                        />\n                    </div>\n                )\n            } else {\n                return <div>\n                    <TextBox/>\n                </div>\n            }\n        } else {\n            return null;\n        }\n    }\n\n    onRestart() {\n        this.setState({index: this.state.model.startNode})\n    }\n\n    onExit() {\n        this.props.onBackButtonClick()\n    }\n\n}\n\nexport default Quest","import React from \"react\"\nimport {ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\nimport ArrowRightOutlinedIcon from '@material-ui/icons/ArrowRightOutlined';\nclass ActionButton extends React.Component{\n\n    render() {\n        return(\n            <ListItem button alignItems=\"flex-start\" onClick={this.props.action} style={this.getStyle()}>\n                <ListItemIcon>\n                    <ArrowRightOutlinedIcon fontSize={\"inherit\"} style={{color:\"#4D708B\"}} />\n                </ListItemIcon>\n                <ListItemText primary={this.props.text} />\n            </ListItem>\n        )\n    }\n\n    getStyle(){\n        return {\n            color: \"#AC9357\"\n        }\n    }\n\n}\nexport default ActionButton","import React from \"react\"\nimport ActionButton from \"./ActionButton\";\nimport Divider from \"@material-ui/core/Divider\";\n\nclass ButtonsList extends React.Component{\n\n    render() {\n        const btns = this.props.actions.map((button) => {\n            return(\n                <div key={button.text}>\n                    <ActionButton text = {button.text} action = {button.action} />\n                    <Divider variant=\"inset\"/>\n                </div>\n            )\n        });\n        return(\n            <div style={this.getStyle()}>\n                {btns}\n            </div>\n        )\n    }\n\n    getStyle(){\n        return{\n            display:\"flex\",\n            flexDirection:\"column\",\n            marginLeft: \"1%\",\n            marginRight: \"1%\",\n            marginTop: \"1%\",\n            marginBottom: \"1%\",\n            border:\"1px solid black\",\n            boxShadow: \"inset 3px 3px 10px #ccc\",\n            backgroundColor:\"#EFE9DB\",\n            borderRadius:\"5px\"\n        }\n    }\n\n}\n\nexport default ButtonsList\n","import React from \"react\"\nclass ImageContainer extends React.Component{\n\n    render() {\n        return(\n            <img style={this.getStyle()} src={this.props.image}/>\n        )\n    }\n\n    getStyle(){\n        return{\n            marginLeft: \"1%\",\n            marginRight: \"1%\",\n            marginTop: \"1%\",\n            border:\"1px solid black\",\n            borderRadius:\"5px\",\n            backgroundColor:\"#384649\",\n            flex:1,\n            alignSelf:\"stretch\",\n            objectFit:\"contain\",\n            height: \"100%\",\n            width :\"97.7%\"\n        }\n    }\n\n}\n\nexport default ImageContainer","import React from \"react\"\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport {withStyles} from \"@material-ui/core\";\nimport {lighten} from \"@material-ui/core/styles\";\nimport {ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\nimport FiberManualRecordOutlinedIcon from '@material-ui/icons/FiberManualRecordOutlined';\n\nconst BorderLinearProgress = withStyles({\n    root: {\n        height: 10,\n        backgroundColor: lighten('#4D708B', 0.75),\n        borderRadius: 20\n    },\n    bar: {\n        borderRadius: 20,\n        backgroundColor: '#4D708B',\n    },\n})(LinearProgress);\n\nclass Inventory extends React.Component{\n\n    render(){\n        return(\n            <div>\n                <h1 style={this.mainHeaderStyle()}>Инфо</h1>\n                <div style={this.getStyle()}>\n                    {this.parseGlobals(this.props.globals)}\n                </div>\n            </div>\n        )\n    }\n\n    parseGlobals(globals){\n        return globals.map((global) => this.parseGlobal(global))\n    }\n\n    parseGlobal(global){\n        if(global.type === 0 || global.type === 2){\n            return <h3 key={global.justifyName}>{global.justifyName}: {global.value}</h3>\n        }else if(global.type === 1){\n            return(\n                <div key={global.justifyName}>\n                    <h3>{global.justifyName}:</h3>\n                    <BorderLinearProgress\n                        variant=\"determinate\"\n                        color=\"secondary\"\n                        value={global.value}\n                    />\n                </div>\n            )\n        }else if(global.type === 3){\n            const items = global.value.map((item) => {\n                return(\n                    <div key={item} style={this.itemStyle()}>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <FiberManualRecordOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={item} />\n                        </ListItem>\n                    </div>\n                )\n            });\n            return(\n                <div key={global.justifyName} style={this.itemsListStyle()}>\n                    <h3>{global.justifyName}:</h3>\n                    {items}\n                </div>\n            )\n        }\n    }\n\n    itemStyle(){\n        return{\n            display:\"flex\",\n            flexDirection:\"row\",\n            flex:1,\n            flexWrap:\"nowrap\"\n        }\n    }\n\n    itemsListStyle(){\n        return{\n            display:\"flex\",\n            flexDirection:\"column\"\n        }\n    }\n\n    mainHeaderStyle(){\n        return{\n            textAlign:\"center\",\n            color:\"#4D708B\"\n        }\n    }\n\n    getStyle(){\n        return {\n            flex:1,\n            flexDirection:\"column\",\n            marginLeft: \"1%\",\n            marginRight: \"1%\",\n            marginTop: \"1%\",\n            backgroundColor:\"#FFFBF2\",\n            color:\"#4D708B\",\n            border:\"1px solid black\",\n            boxShadow: \"inset 3px 3px 10px #ccc\",\n            borderRadius:\"5px\",\n            padding:\"1%\",\n            textAlign:\"width\",\n        }\n    }\n\n}\n\nexport default Inventory","import React from \"react\"\nimport TextField from \"@material-ui/core/TextField\";\n\nclass InputText extends React.Component{\n\n    constructor(){\n        super()\n        this.state={\n            text:\"\",\n            answer:\"\"\n        }\n        this.setStateInner = this.setStateInner.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({answer:this.props.answer})\n    }\n\n    render(){\n        return <TextField\n            id=\"standard-multiline-flexible\"\n            label=\"Ответ\"\n            multiline\n            rowsMax=\"4\"\n            value={this.state.text}\n            onChange={event => this.setStateInner(event)}\n            style={this.inputStyle()}\n            margin=\"normal\"\n        />\n    }\n\n    inputStyle(){\n        return{\n            backgroundColor:\"#FFFBF2\",\n            color:\"#4D708B\",\n            border:\"1px solid black\",\n            boxShadow: \"inset 3px 3px 10px #ccc\",\n            borderRadius:\"5px\",\n            padding:\"1%\"\n        }\n    }\n\n    setStateInner(event){\n        this.setState({text:event.target.value})\n        if(event.target.value === this.state.answer){\n            this.props.onCheckSuccess()\n        }\n    }\n\n}\n\nexport default InputText","import React from \"react\"\nimport TextBox from \"./TextBox\";\nimport ButtonsList from \"./ButtonsList\";\nimport ImageContainer from \"./ImageContainer\";\nimport Swipe from \"react-easy-swipe\"\nimport Inventory from \"./Inventory\";\nimport InputText from \"./InputText\";\n\nclass QuestPage extends React.Component{\n\n    constructor(){\n        super();\n\n        this.state={\n            inInventory:false\n        };\n\n        this.onSwipeMove = this.onSwipeMove.bind(this)\n        this.onCheckInputSuccess = this.onCheckInputSuccess.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({actions:this.props.node.actions})\n    }\n\n    render() {\n        console.log(this.props.node)\n        const actions = (this.props.node.isLast)? this.props.node.endpointActions : this.props.node.actions\n        const content = (this.state.inInventory)?\n            <div style={this.getStyle()}>\n                {(this.props.node.image != null) ? <ImageContainer image={this.props.node.image}/> : null}\n                <Inventory globals={this.props.node.globals}/>\n            </div>\n            :\n            <div style={this.getStyle()}>\n                {(this.props.node.image != null) ? <ImageContainer image={this.props.node.image}/> : null}\n                <TextBox text={this.props.node.text}/>\n                {\n                    (this.props.node.input != null)?\n                        <InputText onCheckSuccess={this.onCheckInputSuccess} answer={this.props.node.input}/>\n                        :\n                        <ButtonsList actions={actions}/>\n                }\n            </div>;\n        return(\n            <Swipe\n                onSwipeStart={this.onSwipeStart}\n                onSwipeMove={this.onSwipeMove}\n                onSwipeEnd={this.onSwipeEnd}\n            >\n                {content}\n            </Swipe>\n        )\n    }\n\n    getStyle(){\n        return {\n            height:\"auto\",\n            display:\"flex\",\n            flex:1,\n            flexDirection:\"column\",\n            justifyContent:'flex-start space-around',\n            alignItems:\"space-around\",\n            alignContent:\"space-around\",\n        };\n    }\n\n    onCheckInputSuccess(){\n        if(this.state.actions.length === 0){\n            return\n        }\n\n        this.state.actions[0].action()\n    }\n\n    onSwipeStart(event) {\n\n    }\n    onSwipeEnd(event) {\n\n    }\n\n    onSwipeMove(position, event) {\n        const minWidth = window.innerWidth / 8\n        if (position.x < -minWidth && !this.state.inInventory){\n            this.setState({inInventory:true})\n        }else if(position.x > minWidth && this.state.inInventory){\n            this.setState({inInventory:false})\n        }\n    }\n\n}\n\nexport default QuestPage","import React from \"react\"\nimport {Button} from \"@vkontakte/vkui\";\n\nclass QuestButton extends React.Component{\n\n    constructor(){\n        super()\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    render(){\n        return(\n            <div style={this.getStyle()}>\n                <h1>{this.props.header}</h1>\n                <p>{this.props.desc}</p>\n                <Button onClick={this.onClick} style={this.getBtnStyle()}>Start</Button>\n            </div>\n        )\n    }\n\n    onClick(){\n        this.props.onButtonClick(this.props.id)\n    }\n\n    getBtnStyle(){\n        return{\n            flex:1,\n            color:\"#FFB954\",\n            backgroundColor:\"#384649\",\n            textAlign:\"center\",\n        }\n    }\n\n    getStyle(){\n        return{\n            display:\"flex\",\n            flexDirection:\"column\",\n            textAlign:\"center\",\n            border:\"1px solid black\",\n            boxShadow: \"inset 3px 3px 10px #ccc\",\n            borderRadius:\"5px\",\n            backgroundColor:\"#EFE9DB\",\n            padding:\"1%\",\n            margin:\"1%\"\n        }\n    }\n\n}\n\nexport default QuestButton","import React from \"react\"\nimport QuestButton from \"./QuestButton\";\n\nclass QuestButtonsList extends React.Component{\n\n    render() {\n        const buttons = this.props.buttons.map((button) => <QuestButton key={button.id} header={button.text} desc={button.description} onButtonClick={this.props.onButtonClick} id={button.id}/>);\n        return(\n            <div style={this.getStyle()}>\n                {buttons}\n            </div>\n        )\n    }\n\n    getStyle(){\n        return{\n            height:\"auto\",\n            display:\"flex\",\n            flexDirection:\"column\",\n            justifyContent:\"space-around\",\n            alignContent:\"space-around\",\n        }\n    }\n\n}\n\nexport default QuestButtonsList","import React, { useState, useEffect } from 'react';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Quest from \"./components/Quest\"\nimport QuestButtonsList from \"./components/QuestButtonsList\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';import AppBar from \"@material-ui/core/AppBar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst buttons = [\n\t{header:\"Quest 1\", id:\"1\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 2\", id:\"2\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 3\", id:\"3\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 4\", id:\"4\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 5\", id:\"5\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 6\", id:\"6\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 7\", id:\"7\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 8\", id:\"8\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 9\", id:\"9\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 10\", id:\"10\", desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\n];\n\nclass App extends React.Component{\n\n\tconstructor(){\n\t\tsuper()\n\n\t\tthis.download((quests) => {\n\t\t\tconsole.log(\"ALLO\");\n\t\t\tconsole.log(quests);\n\t\t\t// console.log(model.data.globals);\n\t\t\t// type, varName, justifyName)\n\t\t\tthis.setState({\n\t\t\t\tquests: quests,\n\t\t\t\tisReady: true,\n\t\t\t\tcurrentQuestId:\"\"\n\t\t\t});\n\t\t});\n\n\t\tthis.onButtonClick = this.onButtonClick.bind(this)\n\t\tthis.onBackButtonClick = this.onBackButtonClick.bind(this)\n\t}\n\n\tdownload(handler) {\n\t\tconst request = require('request');\n\t\trequest(`https://questbook.evarand.rocks/api/quests`, function (error, response, body) {\n\t\t\tconsole.error('error:', error); // Print the error if one occurred\n\t\t\tconsole.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received\n\t\t\tconsole.log('body:', body); // Print the HTML for the Google homepage.;\n\t\t\thandler(JSON.parse(body));\n\t\t});\n\t}\n\n\trender(){\n\t\tif (this.state === null){\n\t\t\treturn null\n\t\t}\n\t\tconst classes = makeStyles(theme => ({\n\t\t\troot: {\n\t\t\t\tflexGrow: 1,\n\t\t\t},\n\t\t\tmenuButton: {\n\t\t\t\tmarginRight: theme.spacing(2),\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\tflexGrow: 1,\n\t\t\t},\n\t\t}));\n\n\t\tconst backBtn = (this.state.currentQuestId !== \"\") ?\n\t\t\t<IconButton edge=\"start\" onClick={this.onBackButtonClick} className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n\t\t\t\t<ArrowBackIosIcon />\n\t\t\t</IconButton>\n\t\t\t:\n\t\t\tnull\n\n\t\tconst content = (this.state.currentQuestId === \"\")?\n\t\t\t<QuestButtonsList buttons = {this.state.quests} onButtonClick={this.onButtonClick}/>\n\t\t\t:\n\t\t\t<Quest onBackButtonClick={this.onBackButtonClick} id ={this.state.currentQuestId}/>\n\t\treturn(\n\t\t\t<div style ={this.getStyle()}>\n\t\t\t\t<AppBar position={\"sticky\"} style={{backgroundColor:\"#4D708B\"}}>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t{backBtn}\n\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>QuestBook</Typography>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t{content}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tonBackButtonClick(){\n\t\tthis.onButtonClick(\"\")\n\t}\n\n\tonButtonClick(id){\n\t\tthis.setState({currentQuestId:id})\n\t}\n\n\tgetStyle(){\n\t\treturn {\n\t\t\tbackground: 'radial-gradient(#D6C594, #938B6A)',\n\t\t\theight:\"auto\",\n\t\t\tminHeight:\"100vh\"\n\t\t};\n\t}\n\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}