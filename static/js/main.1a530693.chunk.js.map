{"version":3,"sources":["components/Quest.js","components/ActionButton.js","components/ButtonsList.js","components/ImageContainer.js","components/Inventory.js","components/InputText.js","components/QuestPage.js","components/QuestButton.js","components/QuestButtonsList.js","App.js","index.js","components/TextBox.js"],"names":["Quest","props","model","download","id","acc","globals","forEach","value","index","params","JSON","stringify","type","justifyName","varName","state","parse","startNode","onRestart","bind","onExit","node","this","getNode","isBaseNode","evalAns","eval","code","links","length","execUntilBaseNode","to","isBranching","newNodeIndex","filter","edge","transition","changeVariable","prevState","newValue","k","setState","text","nodes","prevProps","snapshot","curNode","console","log","isGood","goodNodes","some","goodNode","isBad","badNodes","badNode","endpointActions","Array","restartAction","action","push","exitAction","globalMap","globalsAsMap","key","actions","map","nextBaseNode","questNode","image","pic","input","isLast","onBackButtonClick","React","Component","ActionButton","ListItem","button","alignItems","onClick","style","getStyle","ListItemIcon","fontSize","color","ListItemText","primary","ButtonsList","btns","Divider","variant","display","flexDirection","marginLeft","marginRight","marginTop","marginBottom","border","boxShadow","backgroundColor","borderRadius","ImageContainer","src","flex","alignSelf","objectFit","height","width","BorderLinearProgress","withStyles","root","lighten","bar","LinearProgress","Inventory","mainHeaderStyle","parseGlobals","global","parseGlobal","items","item","itemStyle","itemsListStyle","flexWrap","textAlign","padding","InputText","answer","setStateInner","TextField","label","multiline","rowsMax","onChange","event","inputStyle","margin","target","onCheckSuccess","QuestPage","inInventory","onSwipeMove","onCheckInputSuccess","content","TextBox","onSwipeStart","onSwipeEnd","justifyContent","alignContent","position","minWidth","window","innerWidth","x","QuestButton","header","desc","getBtnStyle","onButtonClick","QuestButtonsList","buttons","App","currentQuestId","classes","makeStyles","theme","flexGrow","menuButton","spacing","title","backBtn","IconButton","className","aria-label","AppBar","Toolbar","Typography","background","minHeight","connect","send","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a530693.chunk.js","sourcesContent":["import React from \"react\"\nimport QuestPage from \"./QuestPage\"\nimport TextBox from \"./TextBox\";\n\nclass Quest extends React.Component {\n\n    constructor(props) {\n        super(props);\n        let model = this.download(this.props.id);\n        // type, varName, justifyName)\n        let acc = \"{\";\n        model.globals.forEach((value, index) => {\n            if (index !== 0) acc += \",\";\n            let params = JSON.stringify({\n                type: value.type,\n                justifyName: value.justifyName,\n                value: value.value\n            });\n            acc += `\"${value.varName}\" : ${params}`\n        });\n        acc += \"}\";\n        this.state = {\n            model: model,\n            globals: JSON.parse(acc),\n            index: model.startNode\n        };\n\n        this.onRestart = this.onRestart.bind(this)\n        this.onExit = this.onExit.bind(this)\n\n    }\n    download(id) {\n        return JSON.parse(`{\"globals\":[{\"type\":2,\"varName\":\"name\",\"justifyName\":\"Имя\",\"value\":\"Нет пока имени\"},{\"type\":0,\"varName\":\"age\",\"justifyName\":\"Возраст\",\"value\":\"Нет пока возраста\"}],\"startNode\":0,\"goodNodes\":[4],\"badNodes\":[5],\"nodes\":[{\"id\":0,\"text\":\"Какое твое имя, путник?\",\"pic\":null,\"links\":[{\"transition\":\"Вася\",\"to\":2},{\"transition\":\"Петр\",\"to\":1}]},{\"id\":1,\"text\":\"Привет, Петр\",\"pic\":null,\"links\":[{\"transition\":\"Продолжить\",\"to\":9}]},{\"id\":2,\"text\":\"Привет, Вася\",\"pic\":null,\"links\":[{\"transition\":\"Продолжить\",\"to\":8}]},{\"id\":3,\"text\":\"Выбери возраст\",\"pic\":null,\"links\":[{\"transition\":\"5\",\"to\":6},{\"transition\":\"18\",\"to\":7}]},{\"id\":4,\"text\":\"Молодец\",\"pic\":null,\"links\":[]},{\"id\":5,\"text\":\"Ну ты и редиска, конечно\",\"pic\":null,\"links\":[]},{\"id\":6,\"links\":[{\"transition\":null,\"to\":10}],\"code\":\"function changeVariable(prevState, newValue) {\\\\n        \\\\n                        let newGlobal = JSON.parse(JSON.stringify(prevState)).globals;\\\\n        \\\\n                        newGlobal.age.value = newValue;\\\\n                        return newGlobal;\\\\n                        }\\\\nthis.setState( prevState => ({\\\\n            globals: changeVariable(prevState, \\\\\"8\\\\\")\\\\n        }));\",\"isBranching\":false},{\"id\":7,\"links\":[{\"transition\":null,\"to\":10}],\"code\":\"function changeVariable(prevState, newValue) {\\\\n        \\\\n                        let newGlobal = JSON.parse(JSON.stringify(prevState)).globals;\\\\n        \\\\n                        newGlobal.age.value = newValue;\\\\n                        return newGlobal;\\\\n                        }\\\\nthis.setState( prevState => ({\\\\n            globals: changeVariable(prevState, \\\\\"18\\\\\")\\\\n        }));\",\"isBranching\":false},{\"id\":8,\"links\":[{\"transition\":null,\"to\":3}],\"code\":\"function changeVariable(prevState, newValue) {\\\\n        \\\\n                        let newGlobal = JSON.parse(JSON.stringify(prevState)).globals;\\\\n        \\\\n                        newGlobal.name.value = newValue;\\\\n                        return newGlobal;\\\\n                        }\\\\nthis.setState( prevState => ({\\\\n            globals: changeVariable(prevState, \\\\\"Вася\\\\\")\\\\n        }));\",\"isBranching\":false},{\"id\":9,\"links\":[{\"transition\":null,\"to\":3}],\"code\":\"function changeVariable(prevState, newValue) {\\\\n        \\\\n                        let newGlobal = JSON.parse(JSON.stringify(prevState)).globals;\\\\n        \\\\n                        newGlobal.name.value = newValue;\\\\n                        return newGlobal;\\\\n                        }\\\\nthis.setState( prevState => ({\\\\n            globals: changeVariable(prevState, \\\\\"Петр\\\\\")\\\\n        }));\",\"isBranching\":false},{\"id\":10,\"links\":[{\"transition\":\"false\",\"to\":4},{\"transition\":\"true\",\"to\":5}],\"code\":\"(( ( \\\\\"Вася\\\\\") == (this.state.globals.name.value)) && (( \\\\\"18\\\\\") == (this.state.globals.age.value))) ? \\\\\"true\\\\\" : \\\\\"false\\\\\"\",\"isBranching\":true}]}`)\n    }\n\n    execUntilBaseNode(index) {\n        const node = this.getNode(index);\n        if (!this.isBaseNode(node)) {\n            const evalAns = eval(node.code);\n            if (node.links.length === 1) {\n                return this.execUntilBaseNode(node.links[0].to)\n            }\n            if (node.isBranching) {\n                const newNodeIndex = node.links.filter(edge => edge.transition === evalAns)[0].to;\n                // todo check newNodeIndex is int\n                return this.execUntilBaseNode(newNodeIndex)\n            } else {\n                function changeVariable(prevState, newValue) {\n                    let newGlobal = JSON.parse(JSON.stringify(prevState));\n                    newGlobal.k = newValue\n                }\n\n                this.setState( prevState => ({\n                    globals: changeVariable(prevState, prevState.globals.k + 1)\n                }));\n\n                // todo check evalAns is int\n                return this.execUntilBaseNode(evalAns)\n            }\n        } else {\n            return node\n        }\n    }\n\n    isBaseNode(node) {\n        return !(typeof node.text === \"undefined\")\n    }\n\n    getNode(index) {\n        return this.state.model.nodes[index]\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        let curNode = this.getNode(this.state.index);\n        if (!this.isBaseNode(curNode)) {\n            const evalAns = eval(curNode.code);\n            if (curNode.links.length === 1) {\n\n                this.setState({\n                    index: curNode.links[0].to\n                });\n\n            } else {\n                if (curNode.isBranching) {\n                    console.log(\"we in Branch!\");\n                    const newNodeIndex = curNode.links.filter(edge => edge.transition === evalAns)[0].to;\n                    // todo check newNodeIndex is int\n                    this.setState({\n                        index: newNodeIndex\n                    });\n                } else {\n                    // todo check evalAns is int\n                    this.setState({\n                        index: evalAns\n                    })\n                }\n            }\n        }\n    }\n\n    render() {\n        const isGood = this.state.model.goodNodes.some(goodNode => goodNode === this.state.index);\n        const isBad = this.state.model.badNodes.some(badNode => badNode === this.state.index);\n        let endpointActions = new Array();\n        if(isBad){\n            const restartAction = {\n                text:\"Перезапустить\",\n                action:this.onRestart\n            }\n            endpointActions.push(restartAction)\n        }\n        if(isGood || isBad){\n            const exitAction = {\n                text:\"Выйти\",\n                action:this.onExit\n            }\n            endpointActions.push(exitAction)\n        }\n\n        let curNode = this.getNode(this.state.index);\n        let globalMap = this.state.globals;\n        let globalsAsMap = new Array();\n        for (const key in globalMap) {\n            globalsAsMap.push(globalMap[key])\n        }\n\n        if (this.isBaseNode(curNode)) {\n            const actions = curNode.links.map(edge => {\n                    let text = edge.transition;\n                    let to = edge.to;\n                    let action = () => {\n                        let nextBaseNode = this.execUntilBaseNode(to);\n                        this.setState({\n                            index: nextBaseNode.id\n                        })\n                    };\n\n                    return {\n                        text: text,\n                        action: action\n                    }\n                }\n            );\n\n            const questNode = {\n                text: curNode.text,\n                image: curNode.pic,\n                actions: actions,\n                input: curNode.input,\n                globals: globalsAsMap,\n                isLast:isGood || isBad,\n                endpointActions: endpointActions\n            };\n\n            return (\n                <div>\n                    <QuestPage\n                        node={questNode}\n                    />\n                </div>\n            )\n        } else {\n            return <div>\n                <TextBox/>\n            </div>\n        }\n}\n\n    onRestart(){\n        this.setState({index: this.state.model.startNode})\n    }\n\n    onExit(){\n        this.props.onBackButtonClick()\n    }\n\n}\n\nexport default Quest","import React from \"react\"\nimport {ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\nimport ArrowRightOutlinedIcon from '@material-ui/icons/ArrowRightOutlined';\nclass ActionButton extends React.Component{\n\n    render() {\n        return(\n            <ListItem button alignItems=\"flex-start\" onClick={this.props.action} style={this.getStyle()}>\n                <ListItemIcon>\n                    <ArrowRightOutlinedIcon fontSize={\"inherit\"} style={{color:\"#4D708B\"}} />\n                </ListItemIcon>\n                <ListItemText primary={this.props.text} />\n            </ListItem>\n        )\n    }\n\n    getStyle(){\n        return {\n            color: \"#AC9357\"\n        }\n    }\n\n}\nexport default ActionButton","import React from \"react\"\nimport ActionButton from \"./ActionButton\";\nimport Divider from \"@material-ui/core/Divider\";\n\nclass ButtonsList extends React.Component{\n\n    render() {\n        const btns = this.props.actions.map((button) => {\n            return(\n                <div key={button.text}>\n                    <ActionButton text = {button.text} action = {button.action} />\n                    <Divider variant=\"inset\"/>\n                </div>\n            )\n        });\n        return(\n            <div style={this.getStyle()}>\n                {btns}\n            </div>\n        )\n    }\n\n    getStyle(){\n        return{\n            display:\"flex\",\n            flexDirection:\"column\",\n            marginLeft: \"1%\",\n            marginRight: \"1%\",\n            marginTop: \"1%\",\n            marginBottom: \"1%\",\n            border:\"1px solid black\",\n            boxShadow: \"inset 3px 3px 10px #ccc\",\n            backgroundColor:\"#EFE9DB\",\n            borderRadius:\"5px\"\n        }\n    }\n\n}\n\nexport default ButtonsList\n","import React from \"react\"\nclass ImageContainer extends React.Component{\n\n    render() {\n        return(\n            <img style={this.getStyle()} src={this.props.image}/>\n        )\n    }\n\n    getStyle(){\n        return{\n            marginLeft: \"1%\",\n            marginRight: \"1%\",\n            marginTop: \"1%\",\n            border:\"1px solid black\",\n            borderRadius:\"5px\",\n            backgroundColor:\"#384649\",\n            flex:1,\n            alignSelf:\"stretch\",\n            objectFit:\"contain\",\n            height: \"100%\",\n            width :\"97.7%\"\n        }\n    }\n\n}\n\nexport default ImageContainer","import React from \"react\"\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport {withStyles} from \"@material-ui/core\";\nimport {lighten} from \"@material-ui/core/styles\";\nimport {ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\nimport FiberManualRecordOutlinedIcon from '@material-ui/icons/FiberManualRecordOutlined';\n\nconst BorderLinearProgress = withStyles({\n    root: {\n        height: 10,\n        backgroundColor: lighten('#4D708B', 0.75),\n        borderRadius: 20\n    },\n    bar: {\n        borderRadius: 20,\n        backgroundColor: '#4D708B',\n    },\n})(LinearProgress);\n\nclass Inventory extends React.Component{\n\n    render(){\n        return(\n            <div>\n                <h1 style={this.mainHeaderStyle()}>Инфо</h1>\n                <div style={this.getStyle()}>\n                    {this.parseGlobals(this.props.globals)}\n                </div>\n            </div>\n        )\n    }\n\n    parseGlobals(globals){\n        return globals.map((global) => this.parseGlobal(global))\n    }\n\n    parseGlobal(global){\n        if(global.type === 0 || global.type === 2){\n            return <h3 key={global.justifyName}>{global.justifyName}: {global.value}</h3>\n        }else if(global.type === 1){\n            return(\n                <div key={global.justifyName}>\n                    <h3>{global.justifyName}:</h3>\n                    <BorderLinearProgress\n                        variant=\"determinate\"\n                        color=\"secondary\"\n                        value={global.value}\n                    />\n                </div>\n            )\n        }else if(global.type === 3){\n            const items = global.value.map((item) => {\n                return(\n                    <div key={item} style={this.itemStyle()}>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <FiberManualRecordOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={item} />\n                        </ListItem>\n                    </div>\n                )\n            });\n            return(\n                <div key={global.justifyName} style={this.itemsListStyle()}>\n                    <h3>{global.justifyName}:</h3>\n                    {items}\n                </div>\n            )\n        }\n    }\n\n    itemStyle(){\n        return{\n            display:\"flex\",\n            flexDirection:\"row\",\n            flex:1,\n            flexWrap:\"nowrap\"\n        }\n    }\n\n    itemsListStyle(){\n        return{\n            display:\"flex\",\n            flexDirection:\"column\"\n        }\n    }\n\n    mainHeaderStyle(){\n        return{\n            textAlign:\"center\",\n            color:\"#4D708B\"\n        }\n    }\n\n    getStyle(){\n        return {\n            flex:1,\n            flexDirection:\"column\",\n            marginLeft: \"1%\",\n            marginRight: \"1%\",\n            marginTop: \"1%\",\n            backgroundColor:\"#FFFBF2\",\n            color:\"#4D708B\",\n            border:\"1px solid black\",\n            boxShadow: \"inset 3px 3px 10px #ccc\",\n            borderRadius:\"5px\",\n            padding:\"1%\",\n            textAlign:\"width\",\n        }\n    }\n\n}\n\nexport default Inventory","import React from \"react\"\nimport TextField from \"@material-ui/core/TextField\";\n\nclass InputText extends React.Component{\n\n    constructor(){\n        super()\n        this.state={\n            text:\"\",\n            answer:\"\"\n        }\n        this.setStateInner = this.setStateInner.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({answer:this.props.answer})\n    }\n\n    render(){\n        return <TextField\n            id=\"standard-multiline-flexible\"\n            label=\"Ответ\"\n            multiline\n            rowsMax=\"4\"\n            value={this.state.text}\n            onChange={event => this.setStateInner(event)}\n            style={this.inputStyle()}\n            margin=\"normal\"\n        />\n    }\n\n    inputStyle(){\n        return{\n            backgroundColor:\"#FFFBF2\",\n            color:\"#4D708B\",\n            border:\"1px solid black\",\n            boxShadow: \"inset 3px 3px 10px #ccc\",\n            borderRadius:\"5px\",\n            padding:\"1%\"\n        }\n    }\n\n    setStateInner(event){\n        this.setState({text:event.target.value})\n        if(event.target.value === this.state.answer){\n            this.props.onCheckSuccess()\n        }\n    }\n\n}\n\nexport default InputText","import React from \"react\"\nimport TextBox from \"./TextBox\";\nimport ButtonsList from \"./ButtonsList\";\nimport ImageContainer from \"./ImageContainer\";\nimport Swipe from \"react-easy-swipe\"\nimport Inventory from \"./Inventory\";\nimport InputText from \"./InputText\";\n\nclass QuestPage extends React.Component{\n\n    constructor(){\n        super();\n\n        this.state={\n            inInventory:false\n        };\n\n        this.onSwipeMove = this.onSwipeMove.bind(this)\n        this.onCheckInputSuccess = this.onCheckInputSuccess.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({actions:this.props.node.actions})\n    }\n\n    render() {\n        console.log(this.props.node)\n        const actions = (this.props.node.isLast)? this.props.node.endpointActions : this.props.node.actions\n        const content = (this.state.inInventory)?\n            <div style={this.getStyle()}>\n                {(this.props.node.image != null) ? <ImageContainer image={this.props.node.image}/> : null}\n                <Inventory globals={this.props.node.globals}/>\n            </div>\n            :\n            <div style={this.getStyle()}>\n                {(this.props.node.image != null) ? <ImageContainer image={this.props.node.image}/> : null}\n                <TextBox text={this.props.node.text}/>\n                {\n                    (this.props.node.input != null)?\n                        <InputText onCheckSuccess={this.onCheckInputSuccess} answer={this.props.node.input}/>\n                        :\n                        <ButtonsList actions={actions}/>\n                }\n            </div>;\n        return(\n            <Swipe\n                onSwipeStart={this.onSwipeStart}\n                onSwipeMove={this.onSwipeMove}\n                onSwipeEnd={this.onSwipeEnd}\n            >\n                {content}\n            </Swipe>\n        )\n    }\n\n    getStyle(){\n        return {\n            height:\"auto\",\n            display:\"flex\",\n            flex:1,\n            flexDirection:\"column\",\n            justifyContent:'flex-start space-around',\n            alignItems:\"space-around\",\n            alignContent:\"space-around\",\n        };\n    }\n\n    onCheckInputSuccess(){\n        if(this.state.actions.length === 0){\n            return\n        }\n\n        this.state.actions[0].action()\n    }\n\n    onSwipeStart(event) {\n\n    }\n    onSwipeEnd(event) {\n\n    }\n\n    onSwipeMove(position, event) {\n        const minWidth = window.innerWidth / 8\n        if (position.x < -minWidth && !this.state.inInventory){\n            this.setState({inInventory:true})\n        }else if(position.x > minWidth && this.state.inInventory){\n            this.setState({inInventory:false})\n        }\n    }\n\n}\n\nexport default QuestPage","import React from \"react\"\nimport {Button} from \"@vkontakte/vkui\";\n\nclass QuestButton extends React.Component{\n\n    constructor(){\n        super()\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    render(){\n        return(\n            <div style={this.getStyle()}>\n                <h1>{this.props.header}</h1>\n                <p>{this.props.desc}</p>\n                <Button onClick={this.onClick} style={this.getBtnStyle()}>Start</Button>\n            </div>\n        )\n    }\n\n    onClick(){\n        this.props.onButtonClick(this.props.id)\n    }\n\n    getBtnStyle(){\n        return{\n            flex:1,\n            color:\"#FFB954\",\n            backgroundColor:\"#384649\",\n            textAlign:\"center\",\n        }\n    }\n\n    getStyle(){\n        return{\n            display:\"flex\",\n            flexDirection:\"column\",\n            textAlign:\"center\",\n            border:\"1px solid black\",\n            boxShadow: \"inset 3px 3px 10px #ccc\",\n            borderRadius:\"5px\",\n            backgroundColor:\"#EFE9DB\",\n            padding:\"1%\",\n            margin:\"1%\"\n        }\n    }\n\n}\n\nexport default QuestButton","import React from \"react\"\nimport QuestButton from \"./QuestButton\";\n\nclass QuestButtonsList extends React.Component{\n\n    render() {\n        const buttons = this.props.buttons.map((button) => <QuestButton key={button.id} header={button.header} desc={button.desc} onButtonClick={this.props.onButtonClick} id={button.id}/>);\n        return(\n            <div style={this.getStyle()}>\n                {buttons}\n            </div>\n        )\n    }\n\n    getStyle(){\n        return{\n            height:\"auto\",\n            display:\"flex\",\n            flexDirection:\"column\",\n            justifyContent:\"space-around\",\n            alignContent:\"space-around\",\n        }\n    }\n\n}\n\nexport default QuestButtonsList","import React, { useState, useEffect } from 'react';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Quest from \"./components/Quest\"\nimport QuestButtonsList from \"./components/QuestButtonsList\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';import AppBar from \"@material-ui/core/AppBar\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst buttons = [\n\t{header:\"Quest 1\", id:\"1\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 2\", id:\"2\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 3\", id:\"3\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 4\", id:\"4\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 5\", id:\"5\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 6\", id:\"6\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 7\", id:\"7\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 8\", id:\"8\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 9\", id:\"9\" , desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\t{header:\"Quest 10\", id:\"10\", desc:\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout.\"},\n\n];\n\nclass App extends React.Component{\n\n\tconstructor(){\n\t\tsuper()\n\n\t\tthis.state={\n\t\t\tcurrentQuestId:\"\"\n\t\t}\n\n\t\tthis.onButtonClick = this.onButtonClick.bind(this)\n\t\tthis.onBackButtonClick = this.onBackButtonClick.bind(this)\n\t}\n\n\trender(){\n\t\tconst classes = makeStyles(theme => ({\n\t\t\troot: {\n\t\t\t\tflexGrow: 1,\n\t\t\t},\n\t\t\tmenuButton: {\n\t\t\t\tmarginRight: theme.spacing(2),\n\t\t\t},\n\t\t\ttitle: {\n\t\t\t\tflexGrow: 1,\n\t\t\t},\n\t\t}));\n\n\t\tconst backBtn = (this.state.currentQuestId !== \"\") ?\n\t\t\t<IconButton edge=\"start\" onClick={this.onBackButtonClick} className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n\t\t\t\t<ArrowBackIosIcon />\n\t\t\t</IconButton>\n\t\t\t:\n\t\t\tnull\n\n\t\tconst content = (this.state.currentQuestId === \"\")?\n\t\t\t<QuestButtonsList buttons = {buttons} onButtonClick={this.onButtonClick}/>\n\t\t\t:\n\t\t\t<Quest onBackButtonClick={this.onBackButtonClick} id ={this.state.currentQuestId}/>\n\t\treturn(\n\t\t\t<div style ={this.getStyle()}>\n\t\t\t\t<AppBar position={\"sticky\"} style={{backgroundColor:\"#4D708B\"}}>\n\t\t\t\t\t<Toolbar>\n\t\t\t\t\t\t{backBtn}\n\t\t\t\t\t\t<Typography variant=\"h6\" className={classes.title}>QuestBook</Typography>\n\t\t\t\t\t</Toolbar>\n\t\t\t\t</AppBar>\n\t\t\t\t{content}\n\t\t\t</div>\n\t\t)\n\t}\n\n\tonBackButtonClick(){\n\t\tthis.onButtonClick(\"\")\n\t}\n\n\tonButtonClick(id){\n\t\tthis.setState({currentQuestId:id})\n\t}\n\n\tgetStyle(){\n\t\treturn {\n\t\t\tbackground: 'radial-gradient(#D6C594, #938B6A)',\n\t\t\theight:\"auto\",\n\t\t\tminHeight:\"100vh\"\n\t\t};\n\t}\n\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from \"react\"\n\nclass TextBox extends React.Component{\n\n    render(){\n        if(this.props.text !== \"\") {\n            return(\n                <div style={this.getStyle()}>\n                    <p>{this.props.text}</p>\n                </div>\n            )\n        }else{\n\n        }\n    }\n\n    getStyle(){\n        return {\n            flex:0.5,\n            marginLeft: \"1%\",\n            marginRight: \"1%\",\n            marginTop: \"1%\",\n            backgroundColor:\"#FFFBF2\",\n            color:\"#4D708B\",\n            border:\"1px solid black\",\n            boxShadow: \"inset 3px 3px 10px #ccc\",\n            borderRadius:\"5px\",\n            padding:\"1%\",\n            textAlign:\"width\",\n        }\n    }\n\n}\n\nexport default TextBox"],"sourceRoot":""}